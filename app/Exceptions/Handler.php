<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\Response;
use Illuminate\Validation\ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register(): void
    {
        $this->reportable(
            static function (Throwable $e) {
                //
            }
        );
    }

    public function render($request, Throwable $e)
    {
        if ($request->acceptsJson()) {
            if ($e instanceof ValidationException) {
                return \response()->json(['errors' => $e->errors()], Response::HTTP_BAD_REQUEST);
            }

            return response()->json(['errors' => [$e->getMessage()]], Response::HTTP_INTERNAL_SERVER_ERROR);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
